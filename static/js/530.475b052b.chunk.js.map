{"version":3,"file":"static/js/530.475b052b.chunk.js","mappings":"mTACAA,EAAAA,EAAAA,SAAAA,QAAyB,8BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,mCACTC,SAAU,SAGL,IAAMC,EAAoB,mCAAG,uGACXH,EAAAA,EAAAA,GAAM,uBAAwB,IADnB,uBAC1BI,EAD0B,EAC1BA,KAMRC,QAAQC,IAAIF,GAPsB,kBAQ3BA,GAR2B,2CAAH,qDAWpBG,EAAiB,mCAAG,WAAMC,GAAN,0FACRR,EAAAA,EAAAA,GAAM,WAAD,OAAYQ,GAAU,CAAC,GADpB,uBACvBJ,EADuB,EACvBA,KACRC,QAAQC,IAAIF,GAFmB,kBAGxBA,GAHwB,2CAAH,sDAMjBK,EAAO,mCAAG,WAAMD,GAAN,0FACER,EAAAA,EAAAA,GAAM,WAAD,OAAYQ,EAAZ,aADP,uBACbJ,EADa,EACbA,KACRC,QAAQC,IAAI,QAASF,GAFA,kBAGdA,GAHc,2CAAH,sDAMPM,EAAU,mCAAG,WAAMF,GAAN,0FACDR,EAAAA,EAAAA,GAAM,WAAD,OAAYQ,EAAZ,aADJ,uBAChBJ,EADgB,EAChBA,KACRC,QAAQC,IAAI,YAAaF,GAFD,kBAGjBA,GAHiB,2CAAH,sDAQVO,EAAY,mCAAG,WAAMC,GAAN,0FACHZ,EAAAA,EAAAA,GAAM,iBAAkB,CAC7Ca,OAAQ,CAKNC,MAAM,GAAD,OAAKF,MAPY,uBAClBR,EADkB,EAClBA,KAURC,QAAQC,IAAI,kBAAmBF,GAXL,kBAYnBA,GAZmB,2CAAH,qD,iKCrCzB,GAAgB,WAAa,4B,iDC2H7B,EAjHe,WAAO,IAAD,EAEnB,GAA4BW,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAKA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMR,EAAK,UAAGO,EAAaE,IAAI,gBAApB,QAAgC,GAIrCC,GAAWC,EAAAA,EAAAA,MAGXC,EAAW,mCAAG,gHAEUf,EAAAA,EAAAA,IAAaG,GAFvB,gBAERa,EAFQ,EAERA,QAERV,GAAU,SAACW,GAAD,cAAoBD,EAApB,IAJM,gDAMhBR,EAASD,EAAMW,SANC,yDAAH,sDAyBjBC,EAAAA,EAAAA,YAAU,WACRJ,GAED,GAAE,CAACZ,IAaJ,OAGE,iBAAKiB,UAAWC,EAAAA,UAAhB,WAEE,6BACE,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAJpB,WAOE,SAACC,EAAA,EAAD,CAEEC,KAAK,OAILC,KAAK,QACLC,KAAK,QACLP,GAAI,CAAEQ,EAAG,EAAGC,MAAO,QACnBC,MAAO,CAAEC,gBAAiB,SAC1Bd,UAAU,eACVe,SAnCgB,SAACC,GACzB,IAAMC,EAAgBD,EAAME,OAAOrC,MAAMsC,OACzC,GAAsB,KAAlBF,EACF,OAAO1B,EAAgB,CAAC,GAE1BA,EAAgB,CAAER,MAAOkC,GAG1B,EA4BSpC,MAAOE,GAAS,GAChBqC,GAAG,gBACHC,MAAM,gBACNC,QAAQ,WACRC,OAAO,WAET,SAACC,EAAA,EAAD,CAAQC,QAAS,kBAAM9B,GAAN,EAAqB2B,QAAQ,WAA9C,wBAKF,SAACI,EAAA,EAAD,CAAOC,QAAS,EAAGC,UAAU,YAI/B,eAAI5B,UAAWC,EAAAA,WAAf,SACGhB,EAAO4C,KAAI,SAACC,EAAKC,GAChB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,WAAMF,EAAIV,IAAMa,MAAOxC,EAA/B,SACGqC,EAAII,SAFAH,EAMZ,QAKR,C","sources":["api/api.js","webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\naxios.defaults.params = {\n  api_key: '0649efc971b913d6bfebf656f94b5c92',\n  language: 'en-US',\n};\n\nexport const getAllMoviesTrending = async () => {\n  const { data } = await axios(`3/trending/movie/day`, {\n    // params: {\n    //   api_key: '0649efc971b913d6bfebf656f94b5c92',\n    //   language: 'en-US',\n    // },\n  });\n  console.log(data);\n  return data;\n};\n\nexport const getMoviesTrending = async moveId => {\n  const { data } = await axios(`3/movie/${moveId}`, {});\n  console.log(data);\n  return data;\n};\n\nexport const getCast = async moveId => {\n  const { data } = await axios(`3/movie/${moveId}/credits`);\n  console.log('Cast=', data);\n  return data;\n};\n\nexport const getReviews = async moveId => {\n  const { data } = await axios(`3/movie/${moveId}/reviews`);\n  console.log('Reviews =', data);\n  return data;\n};\n\n// ('https://api.themoviedb.org/3/search/movie?query=Jack+Reacher&api_key=0649efc971b913d6bfebf656f94b5c92');\n\nexport const getAllMovies = async value => {\n  const { data } = await axios(`3/search/movie`, {\n    params: {\n      // api_key: '0649efc971b913d6bfebf656f94b5c92',\n      // // language: 'en-US',\n      // original_language: 'en-US',\n      // query: `Jack + Reacher`,\n      query: `${value}`,\n    },\n  });\n  // console.log(value);\n  console.log('getAllMovies=>>', data);\n  return data;\n};\n\nexport default getAllMovies;\n","// extracted by mini-css-extract-plugin\nexport default {\"listMovies\":\"Movies_listMovies__lbxuM\"};","import React, { useState, useEffect } from \"react\";\nimport { getAllMovies } from \"../api/api\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport css from \"./Movies.module.css\";\n\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\n\nimport { useSearchParams } from \"react-router-dom\";\nconst Movies = () => {\n  // const { moveId } = useParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  // const [searchInput, setSearchInput] = useState(\"\");\n  // const [searchQuery, setSearchQuery] = useState(\"\");\n  // const [searchedMovies, setSearchedMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\") ?? \"\";\n\n  // const ref = useRef(query);\n\n  const location = useLocation();\n  // const params = useParams();\n  // console.log(params);\n  const fetchMovies = async () => {\n    try {\n      const { results } = await getAllMovies(query);\n      //   console.log(results);\n      setMovies((prevMovies) => [...results]);\n    } catch (err) {\n      setError(error.message);\n    }\n  };\n  //   console.log(movies);\n\n  // useEffect(() => {\n  //   if (!ref.current) {\n  //     return;\n  //   } //відміняємо запит при першому рендері\n  //   fetchMovies(ref.current);\n  // }, [fetchMovies, ref]);\n\n  // useEffect(() => {\n  //   if (!searchQuery) {\n  //     return;\n  //   } //відміняємо запит при першому рендері\n  //   fetchMovies(searchQuery);\n  // }, [fetchMovies, searchQuery]);\n\n  useEffect(() => {\n    fetchMovies();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  const updateQueryString = (event) => {\n    const moviesIdVaiue = event.target.value.trim();\n    if (moviesIdVaiue === \"\") {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: moviesIdVaiue });\n    //   // Если в event.target.value  пустой обьект то записываем {}}\n    //   // Если в event.target.value не пустой обьект то записываем (query: event.target.value)\n  };\n  // const visibleMovies = movies.filter((movie) => movie.includes(query));\n\n  return (\n    // <div className={css.divGoBack}>\n\n    <div className={css.divGoBack}>\n      {/* <Link to=\"/\"> Go back</Link> */}\n      <form>\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <TextField\n            //  className=\"input\"\n            type=\"text\"\n            //  autocomplete=\"off\"\n            //  autofocus\n            //  placeholder=\"Search images and photos\"\n            name=\"title\"\n            size=\"small\"\n            sx={{ m: 1, width: \"35ch\" }}\n            style={{ backgroundColor: \"white\" }}\n            className=\"form-control\"\n            onChange={updateQueryString}\n            value={query || \"\"} // Устанавливаем пустую строку, если значение query равно null\n            id=\"input-with-sx\"\n            label=\"Search movies\"\n            variant=\"outlined\"\n            margin=\"dense\"\n          />\n          <Button onClick={() => fetchMovies()} variant=\"outlined\">\n            Search\n          </Button>\n        </Box>\n\n        <Stack spacing={2} direction=\"row\"></Stack>\n      </form>\n\n      {/* <p>Movies страница</p> */}\n      <ul className={css.listMovies}>\n        {movies.map((mov, index) => {\n          return (\n            <li key={index}>\n              <Link to={`/${mov.id}`} state={location}>\n                {mov.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n    // </div> state={{ from: location }} console.log(location);\n  );\n};\n\nexport default Movies;\n"],"names":["axios","api_key","language","getAllMoviesTrending","data","console","log","getMoviesTrending","moveId","getCast","getReviews","getAllMovies","value","params","query","useState","movies","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","get","location","useLocation","fetchMovies","results","prevMovies","message","useEffect","className","css","Box","sx","display","alignItems","justifyContent","TextField","type","name","size","m","width","style","backgroundColor","onChange","event","moviesIdVaiue","target","trim","id","label","variant","margin","Button","onClick","Stack","spacing","direction","map","mov","index","to","state","title"],"sourceRoot":""}