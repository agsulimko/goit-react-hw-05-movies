{"version":3,"file":"static/js/681.548c88e3.chunk.js","mappings":"mTACAA,EAAAA,EAAAA,SAAAA,QAAyB,8BAElB,IAAMC,EAAoB,mCAAG,uGACXD,EAAAA,EAAAA,GAAM,uBAAwB,CACnDE,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAJoB,uBAC1BC,EAD0B,EAC1BA,KAMRC,QAAQC,IAAIF,GAPsB,kBAQ3BA,GAR2B,2CAAH,qDAWpBG,EAAiB,mCAAG,WAAMC,GAAN,0FACRT,EAAAA,EAAAA,GAAM,WAAD,OAAYS,GAAU,CAChDP,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAJiB,uBACvBC,EADuB,EACvBA,KAURC,QAAQC,IAAIF,GAXmB,kBAYxBA,GAZwB,2CAAH,sDAejBK,EAAO,mCAAG,WAAMD,GAAN,0FACET,EAAAA,EAAAA,GAAM,WAAD,OAAYS,EAAZ,YAA8B,CACxDP,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAJO,uBACbC,EADa,EACbA,KAORC,QAAQC,IAAI,QAASF,GARA,kBASdA,GATc,2CAAH,sDAYPM,EAAU,mCAAG,WAAMF,GAAN,0FACDT,EAAAA,EAAAA,GAAM,WAAD,OAAYS,EAAZ,YAA8B,CACxDP,OAAQ,CACNC,QAAS,mCAETS,kBAAmB,WALC,uBAChBP,EADgB,EAChBA,KAORC,QAAQC,IAAI,YAAaF,GARD,kBASjBA,GATiB,2CAAH,sDAcVQ,EAAY,mCAAG,WAAMC,GAAN,0FACHd,EAAAA,EAAAA,GAAM,iBAAkB,CAC7CE,OAAQ,CACNC,QAAS,mCAETS,kBAAmB,QAEnBG,MAAM,GAAD,OAAKD,MAPY,uBAClBT,EADkB,EAClBA,KASRC,QAAQC,IAAIO,GACZR,QAAQC,IAAI,kBAAmBF,GAXL,kBAYnBA,GAZmB,2CAAH,qD,0HCEzB,UAlDgB,WACd,IAAQI,GAAWO,EAAAA,EAAAA,MAAXP,OACRH,QAAQC,IAAI,UAAWE,GACvB,OAAoCQ,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAY,mCAAG,gHAESX,EAAAA,EAAAA,IAAWF,GAFpB,gBAETc,EAFS,EAETA,QACRjB,QAAQC,IAAIgB,GAOZJ,GAAW,SAACK,GAAD,cAAqBD,EAArB,IACXjB,QAAQC,IAAIW,GAXK,kDAajBG,EAASD,EAAMK,SAbE,0DAAH,qDAuBlB,OANAC,EAAAA,EAAAA,YAAU,WACRJ,GAED,GAAE,IAEHhB,QAAQC,IAAIW,GACRA,EAAcS,QAEd,yBAEGT,EAAcU,KAAI,SAACC,EAAcC,GAChC,OACE,4BACE,yCAAeD,EAAaE,OAA5B,QACA,uBAAIF,EAAaG,YAFTF,EAKb,OAKH,0BACE,uEAGP,C","sources":["api/api.js","components/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\n\nexport const getAllMoviesTrending = async () => {\n  const { data } = await axios(`3/trending/movie/day`, {\n    params: {\n      api_key: '0649efc971b913d6bfebf656f94b5c92',\n      language: 'en-US',\n    },\n  });\n  console.log(data);\n  return data;\n};\n\nexport const getMoviesTrending = async moveId => {\n  const { data } = await axios(`3/movie/${moveId}`, {\n    params: {\n      api_key: '0649efc971b913d6bfebf656f94b5c92',\n      language: 'en-US',\n\n      // moveId: `${value}`,\n\n      // query: `${query}`,\n    },\n  });\n  console.log(data);\n  return data;\n};\n\nexport const getCast = async moveId => {\n  const { data } = await axios(`3/movie/${moveId}/credits`, {\n    params: {\n      api_key: '0649efc971b913d6bfebf656f94b5c92',\n      language: 'en-US',\n      // append_to_response: `976573`,\n    },\n  });\n  console.log('Cast=', data);\n  return data;\n};\n\nexport const getReviews = async moveId => {\n  const { data } = await axios(`3/movie/${moveId}/reviews`, {\n    params: {\n      api_key: '0649efc971b913d6bfebf656f94b5c92',\n      // language: 'en-US',\n      original_language: 'en-US',\n    },\n  });\n  console.log('Reviews =', data);\n  return data;\n};\n\n// ('https://api.themoviedb.org/3/search/movie?query=Jack+Reacher&api_key=0649efc971b913d6bfebf656f94b5c92');\n\nexport const getAllMovies = async value => {\n  const { data } = await axios(`3/search/movie`, {\n    params: {\n      api_key: '0649efc971b913d6bfebf656f94b5c92',\n      // language: 'en-US',\n      original_language: 'en-US',\n      // query: `Jack + Reacher`,\n      query: `${value}`,\n    },\n  });\n  console.log(value);\n  console.log('getAllMovies=>>', data);\n  return data;\n};\n\nexport default getAllMovies;\n","// export const Reviews = () => {\n//   return <div>++++Reviews++++</div>;\n// };\nimport React, { useState, useEffect } from \"react\";\nimport { getReviews } from \"../api/api\";\nimport { useParams } from \"react-router-dom\";\n// import { Notify } from \"notiflix/build/notiflix-notify-aio\";\nconst Reviews = () => {\n  const { moveId } = useParams();\n  console.log(\"moveId=\", moveId);\n  const [reviewsMovies, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  const fetchReviews = async () => {\n    try {\n      const { results } = await getReviews(moveId);\n      console.log(results);\n      // if (!results.length) {\n      //   Notify.failure(\n      //     \"Sorry, there are no images matching your search query. Please try again.\"\n      //   );\n      //   return;\n      // }\n      setReviews((prevReviews) => [...results]);\n      console.log(reviewsMovies);\n    } catch (err) {\n      setError(error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchReviews();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  console.log(reviewsMovies);\n  if (reviewsMovies.length) {\n    return (\n      <div>\n        {/* ++++Reviews++++ */}\n        {reviewsMovies.map((reviewsMovie, index) => {\n          return (\n            <div key={index}>\n              <p>{`Author: ${reviewsMovie.author}.`}</p>\n              <p>{reviewsMovie.content}</p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  } else\n    return (\n      <div>\n        <p> We don't have any reviews for this movie.</p>\n      </div>\n    );\n};\nexport default Reviews;\n"],"names":["axios","getAllMoviesTrending","params","api_key","language","data","console","log","getMoviesTrending","moveId","getCast","getReviews","original_language","getAllMovies","value","query","useParams","useState","reviewsMovies","setReviews","error","setError","fetchReviews","results","prevReviews","message","useEffect","length","map","reviewsMovie","index","author","content"],"sourceRoot":""}